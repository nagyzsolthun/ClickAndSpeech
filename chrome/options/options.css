body {
	margin: 0;
	font-family: sans-serif;
}

/* ===================================== left panel settings =====================================*/

#panel {
	height: 100%;
	background: -webkit-linear-gradient(left, #f8f8f8, #f8f8f8 98%, #aaa);
	float: left;
	margin: 0 10px 0 0;
	border-right: 1px solid gray;
}

#panel h1 {
	font-size: 25px;
	margin: 0.5em;
}

.optionsPageSelector {
	background-color: #fbfbfb;
	padding: 0.5em 1em;
	margin: 2px 0;
	text-align: right;
	border-top: 1px solid gray;
	border-bottom: 1px solid gray;
	-webkit-transition: background-color .2s linear;
}

.optionsPageSelector.active {
	background-color: #dfd;
	/*background: -webkit-linear-gradient(left, #afa, #fff);*/
	border-top: 1px solid gray;
	border-bottom: 1px solid gray;
}

.optionsPageSelector:hover {
	background-color: #4f4;
}

/* ===================================== hoverable and clickable =====================================*/
.hoverable {-webkit-transition: background-color .2s linear;}
.hoverable:hover {background-color:#f0fff0;}
.hoverable.unavailable {background-color:#f8f8f8;}

/* ===================================== content settings =====================================*/

#content {
	/* the content shouldn't flow under the left panel */
	/* http://colinaarts.com/articles/the-magic-of-overflow-hidden/#making-room-for-floats */
	overflow:hidden;
	-webkit-transition: opacity .2s linear;
}

/** TODO why these values work
 https://docs.angularjs.org/api/ngAnimate*/
#content.ng-enter {opacity:0;}
#content.ng-enter.ng-enter-active {opacity:0;}
#content.ng-leave {opacity:1;}
#content.ng-leave.ng-leave-active {opacity:0;}

.control {
	font-size: 30px;
	padding: 1em;
	border-bottom: 1px solid gray;
	-webkit-transition: all .2s linear;
}

/* ===================================== speed settings =====================================*/

.numberInput {
	width: 2em;
	font-size: 30px;
	-webkit-transition: opacity .2s linear;
}
.rangeInput {
	width: 100%;
	-webkit-appearance: none;
	border-radius: 1px;
	background-color: #888;
	height: 3px;
	vertical-align: middle;
	-webkit-transition: background-color .2s linear;
}

.rangeInput::-webkit-slider-thumb {
	-webkit-appearance: none;
	background-image: url('img/sliderThumb.svg');
	background-size: contain;
	height: 32px;
	width: 32px;
	-webkit-transition: all .2s linear;
}
.rangeInput:hover::-webkit-slider-thumb {background-image: url('img/sliderThumbSelected.svg');}

.control.unavailable > .numberInput {opacity: 0;}
.control.unavailable > .rangeInput {background-color:#bbb;}
.control.unavailable > .rangeInput::-webkit-slider-thumb {opacity: 0;}

/* ===================================== start event settings =====================================*/

.choiceList {list-style: none;margin: 0;}
.unavailable {	/* TODO why this works? I want content of .controls.unavailable to be grey */
	color: grey;
	pointer-events: none
}

/* animation for loading: the loading icon rotates behind the option */
.choiceList > .loading:after {
	margin-right: 0;
    background-size: .7em;
	width: .7em;
	height: .7em;
    content: "";
	display: inline-block;	/*http://stackoverflow.com/questions/8959701/using-background-image-in-after-psuedo-class*/
	background-image: url('img/radioLoading.svg');
	-webkit-animation:rotate 2s linear infinite;
}

@-webkit-keyframes rotate { 100% { -webkit-transform: rotate(360deg); } }

/** placeholder for the image before the option (empty/filled circle/square) */
.choiceList > :before {
	margin-right: 0;
    background-size: .7em;
	width: .7em;
	height: .7em;
    content: "";
	display: inline-block;	/*http://stackoverflow.com/questions/8959701/using-background-image-in-after-psuedo-class*/
	/*-webkit-transition: background-image .2s linear; TODO size changes while transition*/
	-webkit-transition: opacity .2s linear;
}

/* remove the image from before the options of unavailable controls*/
.control.unavailable > .choiceList > :before {opacity: 0;}

/** option elements are in spans in lis: li takes the whole width of the page, but we only want to have the text highlighted*/
.choiceList > li > span {border-radius: 0.4em;-webkit-transition: background-color .2s linear;}

.choiceList > li:hover > span 			{background-color:#4f4;}
.choiceList > li.loading > span			{color:grey;}
.choiceList > li.error > span			{color:grey;}
.choiceList > li.loading:hover > span 	{background-color:#ccc;}
.choiceList > li.error:hover > span		{background-color:#ccc;}

/*unavailable controls options are not highlighted*/
.control.unavailable > .choiceList > li > span	{background-color:inherit;}

.singleChoiceList > :before						{background-image: url('img/radio.svg');}
.singleChoiceList > .selected:before			{background-image: url('img/radioSelected.svg');}
.singleChoiceList > .selected.loading:before	{background-image: url('img/radioSelectedLoading.svg');}
.singleChoiceList > .selected.error:before		{background-image: url('img/radioSelectedUnavailable.svg');}

.multipleChoiceList > :before			{background-image: url('img/check.svg');}
.multipleChoiceList > .selected:before	{background-image: url('img/checkSelected.svg');}

/** only visible when keyboard readEvent is selected */
#keySelectorWindow {
	position:fixed;
	background-color:white;
	border: 1px solid black;
	text-align: center;
	
	width: 40em;
	
	/** lets center the div: http://stackoverflow.com/questions/17069435/center-fixed-div-with-dynamic-width-css*/
	top: 0;
	right: 0;
    left: 0;
	margin-right: auto;
    margin-left: auto;
}