body {
	margin: 0;
	font-family: sans-serif;
	background-color:#aaa;
	overflow-y: scroll;
}

/* ===================================== container =====================================*/
.container {
	max-width: 80em;
	margin: 0 auto;
	background-color:white;
}

/* ===================================== header =====================================*/
.header {
	padding: 0.5em 2em;
	background-color: #f8f8f8;
}

.header-title {
	display: inline-block;	/* so logo fits next to h1 */
	margin: .2em 0;
	font-family: sans-serif;
	font-size: 4em;
	font-weight: 400;
}

.header-logo {
	height: 6em;
	margin: 0 0 -1.5em 0;
}

/* ===================================== nav-bar =====================================*/
.nav-bar {
	margin: 0;
    padding: 0;
	background-color:#333;
}

.nav-bar li {
	display: inline-block;
	list-style: none;
	padding: 1.5em;
	margin:0;
	-webkit-transition: background-color .1s linear;
}
.nav-bar span {
	font-size: 2em;
	text-decoration: none;
	color: white;
}

.nav-bar li.active {background-color:#292;}
.nav-bar li:hover {background-color:#4f4;}

#contactNavButton {float:right;}

/* ===================================== hoverable =====================================*/
.hoverable {-webkit-transition: background-color .2s linear;}
.hoverable:hover {background-color:#f0fff0;}
.hoverable.unavailable {background-color:#f8f8f8;}
.hoverable.unavailable:hover {background-color:#f2f2f2;}

/* ===================================== content settings =====================================*/

#content {
	position: absolute; /* overlapping while animation */
	width: 80em;
	-webkit-transition: opacity .2s linear;	/* transition of switching between pages */
}
#content.ng-enter {opacity: 0;}
#content.ng-enter-active {
	/* wait some time to make sure the tts list is received when page is shown */
	-webkit-transition-delay: .2s;
	opacity:1;
}
#content.ng-leave {opacity:1;}
#content.ng-leave-active {opacity:0;}

.setting {
	/* background-color: hides flash when changing to reading settings
	 * flash: the time needed to get the list of tts */
	background-color: white;
	font-size: 30px;
	padding: 1em;
	border-bottom: 1px solid gray;
}

.setting > div {-webkit-transition: color .2s linear;}	/* the transition of the setting titles (when they become unavailable) */

.setting > a {
	font-size: 17px;
	margin: 4px 0;
	-webkit-transition: color,background-color .2s;
}
.setting > a:hover {
	color:black;
	background-color:#4f4
}

/* ===================================== speed settings =====================================*/

.numberInput {
	width: 2em;
	font-size: 30px;
	-webkit-transition: opacity .2s linear;
}
.rangeInput {
	height:64px;	/*big to catch the thumb easily */
	width: 100%;
	margin:-16px 0;	/* smaller vertical space usage*/
	-webkit-appearance: none;
	background-color:rgba(0,0,0,0);
}

.rangeInput:focus {outline: none;}	/* to hide rectangle when in focus */

.rangeInput::-webkit-slider-runnable-track {
	width: 100%;
	height: 3px;
	background-color: #888;
	vertical-align: middle;
}

.rangeInput::-webkit-slider-thumb {
	-webkit-appearance: none;
	background-image: url('img/sliderThumb.svg');
	height: 32px;
	width: 32px;
	margin-top:-16px;	/*move up to the middle */
	-webkit-transition: all .2s linear;
}
.rangeInput:hover::-webkit-slider-thumb {
	background-image: url('img/sliderThumbSelected.svg');
}

.setting.unavailable > .numberInput {
	opacity: 0;
	pointer-events: none;
}
.setting.unavailable > .rangeInput {pointer-events: none;}
.setting.unavailable > .rangeInput::-webkit-slider-runnable-track {background-color: #bbb;}
.setting.unavailable > .rangeInput::-webkit-slider-thumb {opacity: 0;}

/* ===================================== choiceList =====================================*/
.choiceList {list-style: none;margin: 0;}

/* animation for loading: the loading icon rotates behind the option */
.choiceList > .loading:after {
	margin-right: 0;
    background-size: .7em;
	width: .7em;
	height: .7em;
    content: "";
	display: inline-block;	/*http://stackoverflow.com/questions/8959701/using-background-image-in-after-psuedo-class*/
	background-image: url('img/radioLoading.svg');
	-webkit-animation:rotate 2s linear infinite;
}

@-webkit-keyframes rotate { 100% { -webkit-transform: rotate(360deg); } }

/** placeholder for the image before options (empty/filled circle/square) */
.choiceList > :before {
	margin-right: 0;
    background-size: .7em;
	width: .7em;
	height: .7em;
    content: "";
	display: inline-block;	/*http://stackoverflow.com/questions/8959701/using-background-image-in-after-psuedo-class*/
	/*-webkit-transition: background-image .2s linear; TODO size changes while transition*/
	-webkit-transition: opacity .2s linear;
}

/* change color of-, and remove the image from before the options of unavailable settings*/
.setting.unavailable {color: grey;}	/* all text in unavailable setting is grey */
.setting.unavailable > .choiceList > * {pointer-events:none;}
.setting.unavailable > .choiceList > :before {opacity: 0;}

/** option elements are in spans in lis: li takes the whole width of the page, but we only want to have the text highlighted
 * we also set animation on text color and background color (by using all)*/
.choiceList > li > span {border-radius: 0.4em;-webkit-transition: all .2s linear;}

.choiceList > li:hover > span 				{background-color:#4f4;}
.choiceList > li.loading > span				{color:grey;}
.choiceList > li.unavailable > span			{color:grey;}
.choiceList > li.loading:hover > span 		{background-color:#ccc;}
.choiceList > li.unavailable:hover > span	{background-color:#ccc;}
.choiceList > li.unavailable:before			{opacity: 0;}	/* set opacity for the animation */

/*unavailable settings options are not highlighted*/
.setting.unavailable > .choiceList > li > span	{background-color:inherit;}

.singleChoiceList > li:before						{background-image: url('img/radio.svg');}
.singleChoiceList > li.selected:before				{background-image: url('img/radioSelected.svg');}
.singleChoiceList > li.selected.loading:before		{background-image: url('img/radioSelectedLoading.svg');}
.singleChoiceList > li.selected.unavailable:before	{background-image: url('img/radioSelectedUnavailable.svg');opacity: 1;}

.multipleChoiceList > :before			{background-image: url('img/check.svg');}
.multipleChoiceList > .selected:before	{background-image: url('img/checkSelected.svg');}
